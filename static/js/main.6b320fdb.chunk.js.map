{"version":3,"sources":["context.js","components/Contact.js","components/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/AddContact.js","components/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","console","log","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onFieldChange","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","About","NotFound","Test","title","body","fetch","then","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b320fdb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state, \r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state, \r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'EDIT_CONTACT':\r\n            return {\r\n                ...state, \r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact.id === action.payload.id){\r\n                        return action.payload;\r\n                    }\r\n                    else{\r\n                        return contact;\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts: [ ],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users'); \r\n        \r\n        this.setState({contacts : response.data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false,\r\n    };\r\n    \r\n    onShowClick = (e) => {\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n    }\r\n\r\n     onDeleteClick = async (id, dispatch) => {\r\n        console.log('delete ', id);\r\n        \r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type:'DELETE_CONTACT', payload: id});\r\n        }\r\n        catch(e){\r\n            dispatch({type:'DELETE_CONTACT', payload: id});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>  \r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}{'  '}\r\n                            \r\n                            <i onClick={this.onShowClick} className={showContactInfo ? \"glyphicon glyphicon-triangle-bottom\": \"glyphicon glyphicon-triangle-right\"} style={{cursor:'pointer'}}></i>\r\n                            <i onClick={this.onDeleteClick.bind(this,id, dispatch)} className=\"glyphicon glyphicon-trash\" style={{float:'right',cursor:'pointer', color:'red'}}></i>\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <i className=\"glyphicon glyphicon-pencil\" style={{cursor:'pointer', float:'right', color:'black', marginRight:'1rem'}}></i>\r\n                            </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    // name: PropTypes.string.isRequired,\r\n    // email: PropTypes.string.isRequired,\r\n    // phone: PropTypes.string.isRequired,\r\n    contact: PropTypes.object.isRequired,\r\n    \r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../context';\r\n\r\nclass Contacts extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <Consumer> \r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {contacts.map( (contact) => \r\n                                <Contact key={contact.id} contact={contact} />\r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"glyphicon glyphicon-home\"></i>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"glyphicon glyphicon-plus\"></i>Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"glyphicon glyphicon-question-sign\"></i>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n// const headingStyle = {\r\n//     color:'red'\r\n// } \r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} className={classnames(\"form-control form-control-lg\", {\r\n                'is-invalid':error\r\n            })} placeholder={placeholder} name={name} value={value} onChange={onChange}/>\r\n            \r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport {Consumer} from '../context';\r\nimport TextInputGrooup from './layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {},\r\n    };\r\n\r\n    onFieldChange = (e) => {\r\n        // console.log(e);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({ errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({ errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({ errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name : name,\r\n            email : email,\r\n            phone : phone,\r\n        }\r\n\r\n        const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: response.data});\r\n\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {},\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>  \r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGrooup label=\"Name\" name=\"name\" placeholder=\"Enter Name...\" value={name} onChange={this.onFieldChange} error={errors.name}></TextInputGrooup>\r\n                            \r\n                                    <TextInputGrooup label=\"Email\" name=\"email\" type=\"email\" placeholder=\"Enter Email...\" value={email} onChange={this.onFieldChange} error={errors.email}></TextInputGrooup>\r\n                            \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"phone\">Phone</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Enter Phone...\" name=\"phone\" value={phone} onChange={this.onFieldChange} error={errors.phone}/>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from '../context';\r\nimport TextInputGrooup from './layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {},\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = response.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        })\r\n    }\r\n\r\n    onFieldChange = (e) => {\r\n        // console.log(e);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({ errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({ errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({ errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name : name, \r\n            email : email, \r\n            phone : phone,\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n        dispatch({type:'EDIT_CONTACT', payload: response.data})\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {},\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>  \r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGrooup label=\"Name\" name=\"name\" placeholder=\"Enter Name...\" value={name} onChange={this.onFieldChange} error={errors.name}></TextInputGrooup>\r\n                            \r\n                                    <TextInputGrooup label=\"Email\" name=\"email\" type=\"email\" placeholder=\"Enter Email...\" value={email} onChange={this.onFieldChange} error={errors.email}></TextInputGrooup>\r\n                            \r\n                                    <TextInputGrooup label=\"Phone\" name=\"phone\" type=\"phone\" placeholder=\"Enter phone...\" value={phone} onChange={this.onFieldChange} error={errors.phone}></TextInputGrooup>\r\n\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\"/>\r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-5\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    state ={\r\n        title: '',\r\n        body: '',\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount');\r\n        //this is where ajax calls usually go\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({title:data.title, body: data.body});\r\n            console.log(this.state);\r\n        });\r\n    }\r\n    // componentWillMount(){\r\n    //     console.log('component will mount');\r\n    // } DEAD\r\n    // componentDidUpdate(){\r\n    //     console.log('update');\r\n    // }\r\n    // componentWillUpdate(){\r\n    //     console.log('will update');\r\n    // } DEAD\r\n    // componentWillReceiveProps(){\r\n    //     console.log('when component will recieve props');\r\n    // } Dead\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null\r\n    // }\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n\r\n    // }\r\n   \r\n\r\n    render() {\r\n        const {title} = this.state\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/AddContact';\nimport EditContact from './components/EditContact';\n\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends React.Component {\n\trender(){\n\t\t\n\t\treturn (\n\t\t\t<Provider>\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<Header branding=\"Contact Manager\"/>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={Contacts} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/contact/add\" component={AddContact} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/test\" component={Test} />\n\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}